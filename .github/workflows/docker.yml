name: Build & Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  IMAGE_NAME: librus-proxy                 # nazwa obrazu (bez rejestru)
  GHCR_NAMESPACE: normanp2pl
  DOCKERHUB_NAMESPACE: normanp2pl
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # wymagane do pushu do GHCR (ghcr.io)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # --- GHCR (zawsze) ---
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (GHCR)
        id: meta_ghcr
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.GHCR_NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,branch=main,enable=true,priority=600
            type=ref,event=tag,pattern=v(\d+\.\d+\.\d+),enable=true,priority=700
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long,enable=true,priority=100
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build & Push to GHCR (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta_ghcr.outputs.tags }}
          labels: ${{ steps.meta_ghcr.outputs.labels }}
          provenance: false
          sbom: false

      # --- Wykryj, czy Docker Hub ma być włączony (tu wolno używać secrets) ---
      - name: Determine Docker Hub availability
        id: dh_flags
        shell: bash
        run: |
          if [[ -n "${{ secrets.DOCKERHUB_USERNAME }}" && -n "${{ secrets.DOCKERHUB_TOKEN }}" && -n "${{ env.DOCKERHUB_NAMESPACE }}" ]]; then
            echo "enabled=true" >> "$GITHUB_OUTPUT"
          else
            echo "enabled=false" >> "$GITHUB_OUTPUT"
          fi

      # --- Docker Hub (opcjonalnie, tylko gdy enabled=true) ---
      - name: Login to Docker Hub
        if: ${{ steps.dh_flags.outputs.enabled == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata (Docker Hub)
        if: ${{ steps.dh_flags.outputs.enabled == 'true' }}
        id: meta_dh
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,branch=main,enable=true,priority=600
            type=ref,event=tag,pattern=v(\d+\.\d+\.\d+),enable=true,priority=700
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long,enable=true,priority=100
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build & Push to Docker Hub (multi-arch)
        if: ${{ steps.dh_flags.outputs.enabled == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta_dh.outputs.tags }}
          labels: ${{ steps.meta_dh.outputs.labels }}
          provenance: false
          sbom: false

      - name: Show published tags
        run: |
          echo "GHCR tags:"
          echo "${{ steps.meta_ghcr.outputs.tags }}"
          echo "Docker Hub enabled: ${{ steps.dh_flags.outputs.enabled }}"
          if [ "${{ steps.dh_flags.outputs.enabled }}" = "true" ]; then
            echo "Docker Hub tags:"
            echo "${{ steps.meta_dh.outputs.tags }}"
          fi
