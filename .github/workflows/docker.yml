name: Build & Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  IMAGE_NAME: librus-proxy               # nazwa obrazu (bez prefixu rejestru)
  DOCKERHUB_NAMESPACE: normanp2pl
  GHCR_NAMESPACE: normanp2pl
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # wymagane do push do GHCR
      id-token: write   # (opcjonalnie) SBOM/attestation
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Logowanie do Docker Hub (opcjonalne – włącz jeśli chcesz pushować do Docker Hub)
      - name: Login to Docker Hub
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Logowanie do GHCR (opcjonalne – włącz jeśli chcesz pushować do GHCR)
      - name: Login to GHCR
        if: secrets.GITHUB_TOKEN != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_NAMESPACE && secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN && format('{0}/{1}', env.DOCKERHUB_NAMESPACE, env.IMAGE_NAME) || '' }}
            ghcr.io/${{ env.GHCR_NAMESPACE }}/${{ env.IMAGE_NAME }}
          # Tagowanie:
          tags: |
            type=ref,event=branch,branch=main,enable=true,priority=600
            type=ref,event=tag,pattern=v(\d+\.\d+\.\d+),enable=true,priority=700
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long,enable=true,priority=100
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false   # ustaw na true jeśli chcesz generować SLSA/provenance
          sbom: false         # ustaw na true jeśli chcesz SBOM (wymaga uprawnień)

      # (Opcjonalnie) publikacja sum kontrolnych/artefaktów
      - name: Show published tags
        run: |
          echo "Published tags:"
          echo "${{ steps.meta.outputs.tags }}"
